package Package.finance;

public class AmountInWords {
    private static final String[] units = {
        "", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten",
        "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"
    };
    
    private static final String[] tens = {
        "", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"
    };

    public static String convert(long amount) {
        if (amount == 0) {
            return "Zero";
        }
        
        return convertToWords(amount);
    }

    private static String convertToWords(long number) {
        if (number < 20) {
            return units[(int) number];
        }
        
        if (number < 100) {
            return tens[(int) (number / 10)] + ((number % 10 != 0) ? " " + units[(int) (number % 10)] : "");
        }
        
        if (number < 1000) {
            return units[(int) (number / 100)] + " Hundred" + ((number % 100 != 0) ? " and " + convertToWords(number % 100) : "");
        }
        
        if (number < 1000000) {
            return convertToWords(number / 1000) + " Thousand" + ((number % 1000 != 0) ? " " + convertToWords(number % 1000) : "");
        }
        
        if (number < 1000000000) {
            return convertToWords(number / 1000000) + " Million" + ((number % 1000000 != 0) ? " " + convertToWords(number % 1000000) : "");
        }
        
        return convertToWords(number / 1000000000) + " Billion" + ((number % 1000000000 != 0) ? " " + convertToWords(number % 1000000000) : "");
    }

    public static void main(String[] args) {
        System.out.println(convert(123)); // Output: One Hundred and Twenty Three
        System.out.println(convert(1234)); // Output: One Thousand Two Hundred and Thirty Four
        System.out.println(convert(12345)); // Output: Twelve Thousand Three Hundred and Forty Five
        System.out.println(convert(123456)); // Output: One Hundred and Twenty Three Thousand Four Hundred and Fifty Six
    }
}